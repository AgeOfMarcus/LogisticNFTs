from PIL import Image
import shutil
import os

# pseudorandom logistic map
def n(x_n_1: float, r: float):
    """
    x_n_1: value of previous n: 0 < n < 1
    r: rate of growth
    """
    return r * x_n_1 * (1 - x_n_1)

def gen_rand(num, initial=0.4, r=3.57):
    """
    3.57 is where it starts to get bonkers
    """
    xn_1 = n(initial, r)
    for i in range(num-1):
        xn_1 = n(xn_1, r)
        yield xn_1
# end

map_values = list(gen_rand(1000))
TEMPLATE = '''
# {name} - `x={seed}`

Generated with [samila](https://github.com/sepandhaghighi/samila), this image is number {index} in a series generated by x values from the logistic map.

![logistic map](logistic_map.png)

My values start from an initial `x` value of `0.4`, with a rate of growth of `3.57`. This pays homage to one of the first ways we generated random numbers, as results from this formula appear random.
'''[1:-1]

def main():
    for fn in os.listdir():
        if not fn.endswith('.png'):
            continue
        
        seed = float('0.' + fn.replace('.png', ''))
        index = map_values.index(seed)
        image = Image.open(fn)
        image.show()
        
        name = input('Image name: ')
        os.mkdir(name)
        with open(os.path.join(name, 'README.md'), 'w') as f:
            f.write(TEMPLATE.format(index=index, name=name, seed=seed))
        shutil.copyfile(fn, os.path.join(name, 'image.png'))

if __name__ == '__main__':
    main()